AWSTemplateFormatVersion: '2010-09-09'
Description: 'ECS Reference Architecture: Create a highly available ECS cluster with Graviton processors for better price/performance.'

Parameters:
  EnvironmentType:
    Description: 'Specify the Environment type of the stack (Development/Production).'
    Type: String
    Default: Development
    AllowedValues:
      - Development
      - Production
    ConstraintDescription: 'Specify either Development or Production.'

  TemplateLocation:
    Description: 'S3 bucket path where the templates are stored.'
    Type: String
    Default: https://s3.amazonaws.com/ecs-refarch-cloudformation

Mappings:
  EnvironmentConfiguration:
    Development:
      InstanceType: t4g.medium    # Graviton2-based instance
      ClusterSize: 2
    Production:
      InstanceType: m6g.large     # Graviton2-based instance
      ClusterSize: 4
    SpotConfiguration:
      InstanceTypes:
        - c6g.large
        - r6g.large
        - t4g.large

Resources:
  VPC:
    Type: AWS::CloudFormation::Stack
    Properties:
      TemplateURL: !Sub ${TemplateLocation}/infrastructure/vpc-updated.yaml
      Parameters:
        EnvironmentName: !Ref AWS::StackName
        VpcCIDR: 10.180.0.0/16
        PublicSubnet1CIDR: 10.180.8.0/21
        PublicSubnet2CIDR: 10.180.16.0/21
        PrivateSubnet1CIDR: 10.180.24.0/21
        PrivateSubnet2CIDR: 10.180.32.0/21

  SecurityGroups:
    Type: AWS::CloudFormation::Stack
    Properties:
      TemplateURL: !Sub ${TemplateLocation}/infrastructure/security-groups-updated.yaml
      Parameters:
        EnvironmentName: !Ref AWS::StackName
        VPC: !GetAtt VPC.Outputs.VPC

  ALB:
    Type: AWS::CloudFormation::Stack
    Properties:
      TemplateURL: !Sub ${TemplateLocation}/infrastructure/load-balancers-updated.yaml
      Parameters:
        EnvironmentName: !Ref AWS::StackName
        VPC: !GetAtt VPC.Outputs.VPC
        Subnets: !GetAtt VPC.Outputs.PublicSubnets
        SecurityGroup: !GetAtt SecurityGroups.Outputs.LoadBalancerSecurityGroup

  ECS:
    Type: AWS::CloudFormation::Stack
    Properties:
      TemplateURL: !Sub ${TemplateLocation}/infrastructure/ecs-cluster-updated.yaml
      Parameters:
        EnvironmentName: !Ref AWS::StackName
        InstanceType: !FindInMap [EnvironmentConfiguration, !Ref EnvironmentType, InstanceType]
        ClusterSize: !FindInMap [EnvironmentConfiguration, !Ref EnvironmentType, ClusterSize]
        VPC: !GetAtt VPC.Outputs.VPC
        SecurityGroup: !GetAtt SecurityGroups.Outputs.ECSHostSecurityGroup
        Subnets: !GetAtt VPC.Outputs.PrivateSubnets
        SpotInstanceTypes: !Join [",", !FindInMap [EnvironmentConfiguration, SpotConfiguration, InstanceTypes]]

  LifecycleHook:
    Type: AWS::CloudFormation::Stack
    Properties:
      TemplateURL: !Sub ${TemplateLocation}/infrastructure/lifecyclehook-updated.yaml
      Parameters:
        EnvironmentName: !Ref AWS::StackName
        ClusterName: !GetAtt ECS.Outputs.Cluster
        AutoScalingGroupName: !GetAtt ECS.Outputs.AutoScalingGroup

  ProductService:
    Type: AWS::CloudFormation::Stack
    Properties:
      TemplateURL: !Sub ${TemplateLocation}/services/product-service/service-fargate.yaml
      Parameters:
        VPC: !GetAtt VPC.Outputs.VPC
        Cluster: !GetAtt ECS.Outputs.Cluster
        DesiredCount: 2
        Listener: !GetAtt ALB.Outputs.Listener
        Path: /products*
        ECSServiceAutoScalingRoleARN: !GetAtt ECS.Outputs.ECSServiceAutoScalingRole
        Architecture: ARM64

  WebsiteService:
    Type: AWS::CloudFormation::Stack
    Properties:
      TemplateURL: !Sub ${TemplateLocation}/services/website-service/service-updated.yaml
      Parameters:
        VPC: !GetAtt VPC.Outputs.VPC
        Cluster: !GetAtt ECS.Outputs.Cluster
        DesiredCount: 2
        ProductServiceUrl: !Join ['', ['http://', !GetAtt ALB.Outputs.LoadBalancerUrl, '/products']]
        Listener: !GetAtt ALB.Outputs.Listener
        Path: /
        ECSServiceAutoScalingRoleARN: !GetAtt ECS.Outputs.ECSServiceAutoScalingRole
        Architecture: ARM64

Outputs:
  ProductServiceUrl:
    Description: URL of the product service
    Value: !Join ['', ['http://', !GetAtt ALB.Outputs.LoadBalancerUrl, '/products']]

  WebsiteServiceUrl:
    Description: URL of the website service
    Value: !Join ['', ['http://', !GetAtt ALB.Outputs.LoadBalancerUrl, '/']]

  Architecture:
    Description: CPU architecture being used
    Value: ARM64
